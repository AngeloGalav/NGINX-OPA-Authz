worker_processes auto;
error_log logs/error.log debug;

# # caricamento del modulo js
# load_module modules/ngx_http_js_module.so;
# load_module modules/ngx_stream_js_module.so;


# numero connessione attive massime
events {
    worker_connections 1024;
}


http {

    include mime.types;
    
    js_import ../njs/auth_engine.js;

    upstream service_server_web {
        server service_server:80;
    }

    server {
        listen 443 ssl;
        server_name pippocnaf.test.example;
        
        ssl_certificate     certs/star.test.example.cert.pem;
        ssl_certificate_key certs/star.test.example.key.pem;


        # locazione per ""scaricare"" la frontend
        location / {
            proxy_pass http://service_server_web$request_uri;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }

        # in caso si svolga un'operazione, si va qui
        location /operation/ {
            # richiesta all'authserver
            auth_request /authz; 
            proxy_pass http://service_server_web;
        }

        # gestisce l'autorizzazione con uno script che comunica con /_opa
        location /authz {
            internal;
            proxy_pass_header  Authorization;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-METHOD $request_method;

            # passiamo gli header settati
            proxy_pass_request_headers on; 

            js_content auth_engine.authorize_operation;
        }

        # locazione usata per l'invio dei dati a OPA
        location /_opa {
            proxy_pass_request_headers on; 
            proxy_pass http://opa:8181/;
        }

    }
}